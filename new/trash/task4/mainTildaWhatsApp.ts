
declare var UrlFetchApp: {
    fetch(url:  string, param : any)
};


interface StudentInterface {
    name : string
    phone : string
    manager : string
    status : string
}

interface ManagerInterface {
    name : string
    phone : string
    tgNick : string
}

interface ManagerWithStudentInterface {
    manager : ManagerInterface
    student : StudentInterface
}

interface ManagerRepositoryInterface {
    //init : GoogleTableObject
    getByNick(tgNick : string) : ManagerInterface
}

interface StudentExtractorInterface {
    //init : ManagerInterface;
    extract() : StudentInterface
}

interface ManagerExtractorInterface {
    //init: {StudentInterface, ManageInterface}
    extract() : ManagerWithStudentInterface
}


interface MessageInterface {
    message : string
}


interface MessageExtractorInterface {
    //init : {ManagerExtractorInterface}
    extract() : MessageInterface
}


interface MessengerInterface {
    //init: {ConfigInterface, MessageExtractorInterface}
    send() : void
    sendSync() : void
}
interface ConfigInterface {
    get() : void
}




class StudentExtractor implements StudentExtractorInterface{
    private student: StudentInterface;
    constructor(student : StudentInterface) {
        this.student = student
    }
    extract(): StudentInterface {
        return this.student
    }

}

class ManagerExtractor implements ManagerExtractorInterface {
    private studentExtractor: StudentExtractor;
    private readonly manager: ManagerInterface;

    constructor(studentExtractor : StudentExtractor, manager : ManagerInterface ) {
        this.studentExtractor = studentExtractor
        this.manager = manager

    }
    extract(): ManagerWithStudentInterface {
        return {
            student: this.studentExtractor.extract(),
            manager: this.manager
        }
    }

}

class MessageExtractor implements MessageExtractorInterface{
    private managerExtractor: ManagerExtractor;
    constructor(managerExtractor : ManagerExtractor) {
        this.managerExtractor = managerExtractor

    }
    extract(): MessageInterface {
        let message;
        switch (this.managerExtractor.extract().student.status) {
            case "1-–π –Ω–µ–¥–æ–∑–≤–æ–Ω":
                message = `–ü—Ä–∏–≤–µ—Ç, ${this.managerExtractor.extract().student.name}! –¢–æ–ª—å–∫–æ —á—Ç–æ –≤–∞–º –∑–≤–æ–Ω–∏–ª –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø–æ–≤–æ–¥—É –ø—Ä–æ–±–Ω–æ–≥–æ —ç–∫–∑–∞–º–µ–Ω–∞. –ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –µ–º—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –í–ê –∏–ª–∏ –¢–ì.\n–ò–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞: ${this.managerExtractor.extract().manager.name}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${this.managerExtractor.extract().manager.phone}\n–•–æ—Ä–æ—à–æ?)`;
                break;
            case "–î–æ–∑–≤–æ–Ω.–ù–∞–£—Ä–æ–∫":
                message = `–ï—â—ë —Ä–∞–∑ –ø—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –ò–º–ø—É–ª—å—Å–∞:)\n–õ–æ–≤–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—é –ø—Ä–æ–±–Ω–∏–∫–∞: https://clck.ru/36JSkc\n\n–í —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è —Ç–µ–±–µ –ø–æ–∑–≤–æ–Ω—è—Ç –ø–æ –ø–æ–≤–æ–¥—É –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è, –±—É–¥—å –Ω–∞ —Å–≤—è–∑–∏)\n–£–¥–∞—á–∏ –Ω–∞ –ø—Ä–æ–±–Ω–∏–∫–µ –∏ —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è üòä\n–ü–æ–¥—Å–∫–∞–∂–∏, –º–æ–∂–µ—Ç —É —Ç–µ–±—è –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã?`;
                break;
            case "–î–æ–∑–≤–æ–Ω.–ë–µ–∑–£—Ä–æ–∫–∞":
                message = `–ï—â—ë —Ä–∞–∑ –ø—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –ò–º–ø—É–ª—å—Å–∞:)\n–õ–æ–≤–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—é –ø—Ä–æ–±–Ω–∏–∫–∞: https://clck.ru/36JSkc\n\n–ï—Å–ª–∏ –≤–¥—Ä—É–≥ –Ω–∞–¥—É–º–∞–µ—à—å –ø—Ä–æ–π—Ç–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –∏ —Ä–∞–∑–æ–±—Ä–∞—Ç—å –ª—é–±—É—é —Ç–µ–º—É –∏–∑ —ç–∫–∑–∞–º–µ–Ω–∞ (–ø–æ –ª—é–±–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É) ‚Äì –ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ:\n https://impulsschool.ru/\n–ú—ã –ø–æ–¥–±–µ—Ä—ë–º —Ç–µ–±–µ —ç–∫—Å–ø–µ—Ä—Ç–∞!\n–£–¥–∞—á–∏ –Ω–∞ –ø—Ä–æ–±–Ω–∏–∫–µ –∏ —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è üòä\n–ü–æ–¥—Å–∫–∞–∂–∏, –º–æ–∂–µ—Ç —É —Ç–µ–±—è –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã?`;
                break;
            case "–û–∂–∏–¥–∞–µ–º –æ—Ç–µ—Ç–∞. 1 –î–µ–Ω—å":
                message = `–ü—Ä–∏–≤–µ—Ç! –¢–æ–ª—å–∫–æ —á—Ç–æ –≤–∞–º –∑–≤–æ–Ω–∏–ª –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø–æ–≤–æ–¥—É –≤–≤–æ–¥–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è. –ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –µ–º—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –í–ê –∏–ª–∏ –¢–ì.\n–ò–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞: ${this.managerExtractor.extract().manager.name}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${this.managerExtractor.extract().manager.phone}\n–•–æ—Ä–æ—à–æ?)`;
                break;
            case "–ü—Ä–æ–≤–µ–¥–µ–Ω–æ":
                message = `–ü—Ä–∏–≤–µ—Ç! –û—á–µ–Ω—å –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –∑–∞–Ω—è—Ç–∏–µ. –ë—É–¥–µ–º –æ—á–µ–Ω—å —Ä–∞–¥—ã, –µ—Å–ª–∏ –≤—ã –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ü–µ–Ω–∏—Ç–µ —É—Ä–æ–∫ –æ—Ç 1 –¥–æ 10, –≥–¥–µ 10 ‚Äì —ç—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –∫—Ä—É—Ç–æ)`;
                break
            default:
                message = `–ü—Ä–∏–≤–µ—Ç, ${this.managerExtractor.extract().student.name}! –ú—ã –∑–∞–ø–∏—Å–∞–ª–∏ —Ç–µ–±—è –Ω–∞ –∑–∞–Ω—è—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–π–¥–µ—Ç ${this.managerExtractor.extract().student.status}. –•–æ—Ä–æ—à–µ–≥–æ —É—Ä–æ–∫–∞ :)\n–ò–º—è —Ç–≤–æ–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: ${this.managerExtractor.extract().manager.name}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${this.managerExtractor.extract().manager.phone}\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-—É–≥–æ–¥–Ω–æ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏)`

        }
        return {message : message}
    }

}


class ManagerRepository implements ManagerRepositoryInterface{
    private managers : ManagerInterface[];
    constructor(managers : ManagerInterface[]) {
        this.managers = managers
    }
    getByNick(tgNick : string): ManagerInterface{
        let manager= this.managers.find(manager => manager.tgNick === tgNick)
        if (manager === undefined || manager === null) {
            return {name: 'UNDEFINED', tgNick: '@UNDEFINED', phone:  'UNDEFINED'}
        }
        return manager;
    }

}



class WhatsAppMessenger implements MessengerInterface{
    private whatsAppMessengerConfig: WhatsAppMessengerConfig;

    constructor(whatsAppMessengerConfig : WhatsAppMessengerConfig) {
        this.whatsAppMessengerConfig = whatsAppMessengerConfig
    }

    async send(): Promise<void> {
        const messageConfig = this.whatsAppMessengerConfig.createMessage();
        try {
            const response = await fetch(this.whatsAppMessengerConfig.getApiUrl(), messageConfig);
            const data = await response.json();
            console.log(data);
        } catch (error) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        }
    }
    sendSync() : void {
        const messageConfig = this.whatsAppMessengerConfig.createMessage();
        const response = UrlFetchApp.fetch(this.whatsAppMessengerConfig.getApiUrl(), messageConfig);

    }

}

class WhatsAppMessengerConfig {
    private readonly apiUrl: string;
    private messageExtractor: MessageExtractor;
    private studentExtractor: StudentExtractor;
    private readonly token: string;
    private readonly channelId: string;
    constructor(channelId : string, token : string, messageExtractor : MessageExtractor, studentExtractor: StudentExtractor) {
        this.token = token
        this.channelId = channelId
        this.apiUrl = `https://api.wazzup24.com/v3/message`;
        this.messageExtractor = messageExtractor
        this.studentExtractor = studentExtractor
    }

    getApiUrl() {
        return this.apiUrl
    }
    createMessage() {
        const payload = {
            channelId: this.channelId,
            chatId: this.studentExtractor.extract().phone,
            chatType: "whatsapp",
            text: this.messageExtractor.extract().message,
        };
        return {
            method: 'POST',
            headers: {
                "Content-Type": "application/json",
                "Authorization": "Bearer " + this.token
            },
            payload: JSON.stringify(payload)
        };
    }
}



function sendMessageToWhatsApp(inputDataManager : string[][], inputDataStudent : string[], channelId : string, token : string, inputDataStudentFromTildaStatus : string)  : void{
    const managersCollection : ManagerInterface[] = inputDataManager.map((item)=> {
        return {
            name: item[0],
            phone: item[1],
            tgNick: item[2]
        }
    })
    const studentData : StudentInterface = {
        name : inputDataStudent[1],
        phone: inputDataStudent[4],
        manager : inputDataStudent[5],
        status : inputDataStudentFromTildaStatus
    }
    new WhatsAppMessenger(
        new WhatsAppMessengerConfig(channelId,token,
            new MessageExtractor(
                new ManagerExtractor(
                    new StudentExtractor(studentData),
                    new ManagerRepository(managersCollection).getByNick(
                        new StudentExtractor(studentData).extract().manager))),
            new StudentExtractor(studentData))).sendSync()



}

/*
const botToken = '6169349504:AAFKvAVRcmW1kDukQ4fUyc8kmrhAfocLKDA';
//GOOGLE –î–ê–ù–ù–´–ï-–ú–ï–ù–ï–î–ñ–ï–†–´ –ò–ó –¢–ò–õ–¨–î–´ –ò –ï–ì–≠ –õ–ò–°–¢–û–í
const inputDataManager = [
    ["–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ –ì–æ–ª–æ–≤–∞–Ω–æ–≤–∞", '89141516', "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞"],
    ["–î–∞—Ä—å—è –î–º–∏—Ç—Ä–∏–µ–≤–∞", '89141516', "–î–∞—Ä—å—è –î–º–∏—Ç—Ä–∏–µ–≤–∞"],
    ["–î–∂—É–ª—å–µ—Ç—Ç–∞", '89141516', "Julietta"],
    ["–ê—Ä–∏–Ω–∞ –°–º–æ–ª—è–∫–æ–≤–∞", '89141516', "–ê—Ä–∏–Ω–∞ –°–º–æ–ª—è–∫–æ–≤–∞"],
    ["–¢–∞–º–∞—Ä–∞ –°–æ–ª–æ–≤—å–µ–≤–∞", '89141516', "–¢–∞–º–∞—Ä–∞ –°–æ–ª–æ–≤—å–µ–≤–∞"],
    ["", '89141516', "Arthur Arakelyan üá¶üá≤"],
    ["", "", ""]
];

const inputDataStudent= ["–°–æ–Ω—è –£—á–µ–Ω–∏—Ü–∞", "–ü3 ‚Äì –ü—Ä–æ–±–Ω–∏–∫–∏", "", "926411775", "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "11"]

mainTaskTilda(inputDataManager, inputDataStudent, botToken, '1')

*/
